params {
    input = ""
    output = "./output"
    mamba = false
    workDir = "./nextflow_workdir"
    array = 500
}

workDir = params.workDir

profiles {
    standard {
        params.threads = Runtime.runtime.availableProcessors()
        params.forks = params.threads - 1
        params.executor = 'local'
        process.executor = 'local'
        process.cpus = 1
        process.memory = { 512.MB * task.attempt }
        process.maxForks = params.forks
        conda.enabled = true
        process.conda = "$projectDir/envs/clustering.yml"
        if (params.mamba != false) {
            conda.useMamba = true
        }
    }
    slurm {
        params.threads = 32
        params.maxThreads = 64
        params.forks = 1024  // 64
        params.queueSize = params.forks
        params.pollInterval = '3sec'
        params.submitRateLimit = '32sec'  // x job submissions per second
        params.queue = "bcf"
        params.executor = 'slurm'
        process.executor = 'slurm'
        process.queue = params.queue
        process.cpus = 1
        process.memory = { 512.MB * task.attempt }
        process.maxForks = params.forks - 1
        executor.queueSize = params.queueSize
        executor.pollInterval = params.pollInterval
        executor.submitRateLimit = params.submitRateLimit
        conda.enabled = true
        process.conda = "$projectDir/envs/clustering.yml"
        process.errorStrategy = { sleep(task.attempt * 200 as long); return 'retry' }
        process.maxRetries = 1
        if (params.mamba != false) {
            conda.useMamba = true
        }
    }
}
